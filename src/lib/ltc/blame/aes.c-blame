53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000   1) /* LibTomCrypt, modular cryptographic library -- Tom St Denis
53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000   2)  *
53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000   3)  * LibTomCrypt is a library that provides various cryptographic
53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000   4)  * algorithms in a highly modular and flexible manner.
53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000   5)  *
53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000   6)  * The library is free for all purposes without any express
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000   7)  * guarantee it works.
53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000   8)  *
bbc52b9e src/ciphers/aes/aes.c (Tom St Denis    2007-07-20 17:48:02 +0000   9)  * Tom St Denis, tomstdenis@gmail.com, http://libtom.org
53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000  10)  */
53f7f3ba aes.c                 (Tom St Denis    2004-01-25 17:40:34 +0000  11) 
bd479d2b aes.c                 (Tom St Denis    2003-07-11 02:09:41 +0000  12) /* AES implementation by Tom St Denis
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  13)  *
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  14)  * Derived from the Public Domain source code by
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100  15) 
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100  16) ---
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  17)   * rijndael-alg-fst.c
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  18)   *
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  19)   * @version 3.0 (December 2000)
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  20)   *
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  21)   * Optimised ANSI C code for the Rijndael cipher (now AES)
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  22)   *
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  23)   * @author Vincent Rijmen <vincent.rijmen@esat.kuleuven.ac.be>
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  24)   * @author Antoon Bosselaers <antoon.bosselaers@esat.kuleuven.ac.be>
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  25)   * @author Paulo Barreto <paulo.barreto@terra.com.br>
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  26) ---
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000  27)  */
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000  28) /**
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000  29)   @file aes.c
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000  30)   Implementation of AES
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100  31) */
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  32) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000  33) #include "tomcrypt.h"
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  34) 
bbc52b9e src/ciphers/aes/aes.c (Tom St Denis    2007-07-20 17:48:02 +0000  35) #ifdef LTC_RIJNDAEL
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  36) 
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100  37) #ifndef ENCRYPT_ONLY
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  38) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  39) #define SETUP    rijndael_setup
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  40) #define ECB_ENC  rijndael_ecb_encrypt
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  41) #define ECB_DEC  rijndael_ecb_decrypt
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000  42) #define ECB_DONE rijndael_done
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  43) #define ECB_TEST rijndael_test
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  44) #define ECB_KS   rijndael_keysize
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  45) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000  46) const struct ltc_cipher_descriptor rijndael_desc =
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  47) {
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  48)     "rijndael",
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  49)     6,
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  50)     16, 32, 16, 10,
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000  51)     SETUP, ECB_ENC, ECB_DEC, ECB_TEST, ECB_DONE, ECB_KS,
2de2976d src/ciphers/aes/aes.c (Tom St Denis    2006-11-17 14:21:24 +0000  52)     NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  53) };
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  54) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000  55) const struct ltc_cipher_descriptor aes_desc =
2ef59575 aes.c                 (Tom St Denis    2003-03-03 01:01:40 +0000  56) {
2ef59575 aes.c                 (Tom St Denis    2003-03-03 01:01:40 +0000  57)     "aes",
2ef59575 aes.c                 (Tom St Denis    2003-03-03 01:01:40 +0000  58)     6,
2ef59575 aes.c                 (Tom St Denis    2003-03-03 01:01:40 +0000  59)     16, 32, 16, 10,
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000  60)     SETUP, ECB_ENC, ECB_DEC, ECB_TEST, ECB_DONE, ECB_KS,
2de2976d src/ciphers/aes/aes.c (Tom St Denis    2006-11-17 14:21:24 +0000  61)     NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
2ef59575 aes.c                 (Tom St Denis    2003-03-03 01:01:40 +0000  62) };
2ef59575 aes.c                 (Tom St Denis    2003-03-03 01:01:40 +0000  63) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  64) #else
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  65) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  66) #define SETUP    rijndael_enc_setup
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  67) #define ECB_ENC  rijndael_enc_ecb_encrypt
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  68) #define ECB_KS   rijndael_enc_keysize
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000  69) #define ECB_DONE rijndael_enc_done
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  70) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000  71) const struct ltc_cipher_descriptor rijndael_enc_desc =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  72) {
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  73)     "rijndael",
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  74)     6,
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  75)     16, 32, 16, 10,
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000  76)     SETUP, ECB_ENC, NULL, NULL, ECB_DONE, ECB_KS,
2de2976d src/ciphers/aes/aes.c (Tom St Denis    2006-11-17 14:21:24 +0000  77)     NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  78) };
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  79) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000  80) const struct ltc_cipher_descriptor aes_enc_desc =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  81) {
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  82)     "aes",
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  83)     6,
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  84)     16, 32, 16, 10,
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000  85)     SETUP, ECB_ENC, NULL, NULL, ECB_DONE, ECB_KS,
2de2976d src/ciphers/aes/aes.c (Tom St Denis    2006-11-17 14:21:24 +0000  86)     NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  87) };
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  88) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  89) #endif
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  90) 
cbd59421 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-03-04 19:18:52 +0100  91) #define __LTC_AES_TAB_C__
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  92) #include "aes_tab.c"
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000  93) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  94) static ulong32 setup_mix(ulong32 temp)
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  95) {
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  96)    return (Te4_3[byte(temp, 2)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  97)           (Te4_2[byte(temp, 1)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  98)           (Te4_1[byte(temp, 0)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000  99)           (Te4_0[byte(temp, 3)]);
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 100) }
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 101) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 102) #ifndef ENCRYPT_ONLY
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 103) #ifdef LTC_SMALL_CODE
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 104) static ulong32 setup_mix2(ulong32 temp)
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 105) {
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 106)    return Td0(255 & Te4[byte(temp, 3)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 107)           Td1(255 & Te4[byte(temp, 2)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 108)           Td2(255 & Te4[byte(temp, 1)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 109)           Td3(255 & Te4[byte(temp, 0)]);
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 110) }
a21f63bb aes.c                 (Tom St Denis    2004-07-23 15:40:22 +0000 111) #endif
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 112) #endif
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 113) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 114)  /**
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 115)     Initialize the AES (Rijndael) block cipher
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 116)     @param key The symmetric key you wish to pass
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 117)     @param keylen The key length in bytes
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 118)     @param num_rounds The number of rounds desired (0 for default)
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 119)     @param skey The key in as scheduled by this function.
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 120)     @return CRYPT_OK if successful
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 121)  */
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 122) int SETUP(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 123) {
3da9adc3 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:50:21 +0100 124)     int i;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 125)     ulong32 temp, *rk;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 126) #ifndef ENCRYPT_ONLY
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 127)     ulong32 *rrk;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 128) #endif
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 129)     LTC_ARGCHK(key  != NULL);
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 130)     LTC_ARGCHK(skey != NULL);
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 131) 
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 132)     if (keylen != 16 && keylen != 24 && keylen != 32) {
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 133)        return CRYPT_INVALID_KEYSIZE;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 134)     }
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 135) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 136)     if (num_rounds != 0 && num_rounds != (10 + ((keylen/8)-2)*2)) {
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 137)        return CRYPT_INVALID_ROUNDS;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 138)     }
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 139) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 140)     skey->rijndael.Nr = 10 + ((keylen/8)-2)*2;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 141) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 142)     /* setup the forward key */
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 143)     i                 = 0;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 144)     rk                = skey->rijndael.eK;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 145)     LOAD32H(rk[0], key     );
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 146)     LOAD32H(rk[1], key +  4);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 147)     LOAD32H(rk[2], key +  8);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 148)     LOAD32H(rk[3], key + 12);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 149)     if (keylen == 16) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 150)         for (;;) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 151)             temp  = rk[3];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 152)             rk[4] = rk[0] ^ setup_mix(temp) ^ rcon[i];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 153)             rk[5] = rk[1] ^ rk[4];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 154)             rk[6] = rk[2] ^ rk[5];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 155)             rk[7] = rk[3] ^ rk[6];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 156)             if (++i == 10) {
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 157)                break;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 158)             }
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 159)             rk += 4;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 160)         }
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 161)     } else if (keylen == 24) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 162)         LOAD32H(rk[4], key + 16);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 163)         LOAD32H(rk[5], key + 20);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 164)         for (;;) {
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 165)         #ifdef _MSC_VER
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 166)             temp = skey->rijndael.eK[rk - skey->rijndael.eK + 5];
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 167)         #else
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 168)             temp = rk[5];
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 169)         #endif
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 170)             rk[ 6] = rk[ 0] ^ setup_mix(temp) ^ rcon[i];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 171)             rk[ 7] = rk[ 1] ^ rk[ 6];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 172)             rk[ 8] = rk[ 2] ^ rk[ 7];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 173)             rk[ 9] = rk[ 3] ^ rk[ 8];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 174)             if (++i == 8) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 175)                 break;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 176)             }
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 177)             rk[10] = rk[ 4] ^ rk[ 9];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 178)             rk[11] = rk[ 5] ^ rk[10];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 179)             rk += 6;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 180)         }
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 181)     } else if (keylen == 32) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 182)         LOAD32H(rk[4], key + 16);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 183)         LOAD32H(rk[5], key + 20);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 184)         LOAD32H(rk[6], key + 24);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 185)         LOAD32H(rk[7], key + 28);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 186)         for (;;) {
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 187)         #ifdef _MSC_VER
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 188)             temp = skey->rijndael.eK[rk - skey->rijndael.eK + 7];
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 189)         #else
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 190)             temp = rk[7];
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 191)         #endif
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 192)             rk[ 8] = rk[ 0] ^ setup_mix(temp) ^ rcon[i];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 193)             rk[ 9] = rk[ 1] ^ rk[ 8];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 194)             rk[10] = rk[ 2] ^ rk[ 9];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 195)             rk[11] = rk[ 3] ^ rk[10];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 196)             if (++i == 7) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 197)                 break;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 198)             }
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 199)             temp = rk[11];
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 200)             rk[12] = rk[ 4] ^ setup_mix(RORc(temp, 8));
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 201)             rk[13] = rk[ 5] ^ rk[12];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 202)             rk[14] = rk[ 6] ^ rk[13];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 203)             rk[15] = rk[ 7] ^ rk[14];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 204)             rk += 8;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 205)         }
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 206)     } else {
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 207)        /* this can't happen */
4c8949e4 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-05-25 00:26:30 +0200 208)        /* coverity[dead_error_line] */
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 209)        return CRYPT_ERROR;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 210)     }
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 211) 
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 212) #ifndef ENCRYPT_ONLY
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 213)     /* setup the inverse key now */
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 214)     rk   = skey->rijndael.dK;
3da9adc3 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:50:21 +0100 215)     rrk  = skey->rijndael.eK + (28 + keylen) - 4;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 216) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 217)     /* apply the inverse MixColumn transform to all round keys but the first and the last: */
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 218)     /* copy first */
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 219)     *rk++ = *rrk++;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 220)     *rk++ = *rrk++;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 221)     *rk++ = *rrk++;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 222)     *rk   = *rrk;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 223)     rk -= 3; rrk -= 3;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 224) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 225)     for (i = 1; i < skey->rijndael.Nr; i++) {
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 226)         rrk -= 4;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 227)         rk  += 4;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 228)     #ifdef LTC_SMALL_CODE
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 229)         temp = rrk[0];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 230)         rk[0] = setup_mix2(temp);
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 231)         temp = rrk[1];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 232)         rk[1] = setup_mix2(temp);
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 233)         temp = rrk[2];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 234)         rk[2] = setup_mix2(temp);
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 235)         temp = rrk[3];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 236)         rk[3] = setup_mix2(temp);
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 237)      #else
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 238)         temp = rrk[0];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 239)         rk[0] =
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 240)             Tks0[byte(temp, 3)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 241)             Tks1[byte(temp, 2)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 242)             Tks2[byte(temp, 1)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 243)             Tks3[byte(temp, 0)];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 244)         temp = rrk[1];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 245)         rk[1] =
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 246)             Tks0[byte(temp, 3)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 247)             Tks1[byte(temp, 2)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 248)             Tks2[byte(temp, 1)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 249)             Tks3[byte(temp, 0)];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 250)         temp = rrk[2];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 251)         rk[2] =
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 252)             Tks0[byte(temp, 3)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 253)             Tks1[byte(temp, 2)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 254)             Tks2[byte(temp, 1)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 255)             Tks3[byte(temp, 0)];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 256)         temp = rrk[3];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 257)         rk[3] =
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 258)             Tks0[byte(temp, 3)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 259)             Tks1[byte(temp, 2)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 260)             Tks2[byte(temp, 1)] ^
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 261)             Tks3[byte(temp, 0)];
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 262)       #endif
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 263) 
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 264)     }
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 265) 
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 266)     /* copy last */
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 267)     rrk -= 4;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 268)     rk  += 4;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 269)     *rk++ = *rrk++;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 270)     *rk++ = *rrk++;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 271)     *rk++ = *rrk++;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 272)     *rk   = *rrk;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 273) #endif /* ENCRYPT_ONLY */
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 274) 
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 275)     return CRYPT_OK;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 276) }
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 277) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 278) /**
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 279)   Encrypts a block of text with AES
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 280)   @param pt The input plaintext (16 bytes)
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 281)   @param ct The output ciphertext (16 bytes)
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 282)   @param skey The key as scheduled
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 283)   @return CRYPT_OK if successful
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 284) */
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 285) #ifdef LTC_CLEAN_STACK
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 286) static int _rijndael_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 287) #else
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 288) int ECB_ENC(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 289) #endif
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 290) {
bd479d2b aes.c                 (Tom St Denis    2003-07-11 02:09:41 +0000 291)     ulong32 s0, s1, s2, s3, t0, t1, t2, t3, *rk;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 292)     int Nr, r;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 293) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 294)     LTC_ARGCHK(pt != NULL);
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 295)     LTC_ARGCHK(ct != NULL);
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 296)     LTC_ARGCHK(skey != NULL);
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 297) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 298)     Nr = skey->rijndael.Nr;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 299)     rk = skey->rijndael.eK;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 300) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 301)     /*
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 302)      * map byte array block to cipher state
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 303)      * and add initial round key:
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 304)      */
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 305)     LOAD32H(s0, pt      ); s0 ^= rk[0];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 306)     LOAD32H(s1, pt  +  4); s1 ^= rk[1];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 307)     LOAD32H(s2, pt  +  8); s2 ^= rk[2];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 308)     LOAD32H(s3, pt  + 12); s3 ^= rk[3];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 309) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 310) #ifdef LTC_SMALL_CODE
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 311) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 312)     for (r = 0; ; r++) {
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 313)         rk += 4;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 314)         t0 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 315)             Te0(byte(s0, 3)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 316)             Te1(byte(s1, 2)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 317)             Te2(byte(s2, 1)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 318)             Te3(byte(s3, 0)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 319)             rk[0];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 320)         t1 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 321)             Te0(byte(s1, 3)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 322)             Te1(byte(s2, 2)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 323)             Te2(byte(s3, 1)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 324)             Te3(byte(s0, 0)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 325)             rk[1];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 326)         t2 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 327)             Te0(byte(s2, 3)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 328)             Te1(byte(s3, 2)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 329)             Te2(byte(s0, 1)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 330)             Te3(byte(s1, 0)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 331)             rk[2];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 332)         t3 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 333)             Te0(byte(s3, 3)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 334)             Te1(byte(s0, 2)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 335)             Te2(byte(s1, 1)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 336)             Te3(byte(s2, 0)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 337)             rk[3];
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 338)         if (r == Nr-2) {
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 339)            break;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 340)         }
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 341)         s0 = t0; s1 = t1; s2 = t2; s3 = t3;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 342)     }
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 343)     rk += 4;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 344) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 345) #else
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 346) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 347)     /*
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 348)      * Nr - 1 full rounds:
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 349)      */
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 350)     r = Nr >> 1;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 351)     for (;;) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 352)         t0 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 353)             Te0(byte(s0, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 354)             Te1(byte(s1, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 355)             Te2(byte(s2, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 356)             Te3(byte(s3, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 357)             rk[4];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 358)         t1 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 359)             Te0(byte(s1, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 360)             Te1(byte(s2, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 361)             Te2(byte(s3, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 362)             Te3(byte(s0, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 363)             rk[5];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 364)         t2 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 365)             Te0(byte(s2, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 366)             Te1(byte(s3, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 367)             Te2(byte(s0, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 368)             Te3(byte(s1, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 369)             rk[6];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 370)         t3 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 371)             Te0(byte(s3, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 372)             Te1(byte(s0, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 373)             Te2(byte(s1, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 374)             Te3(byte(s2, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 375)             rk[7];
bd479d2b aes.c                 (Tom St Denis    2003-07-11 02:09:41 +0000 376) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 377)         rk += 8;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 378)         if (--r == 0) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 379)             break;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 380)         }
bd479d2b aes.c                 (Tom St Denis    2003-07-11 02:09:41 +0000 381) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 382)         s0 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 383)             Te0(byte(t0, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 384)             Te1(byte(t1, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 385)             Te2(byte(t2, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 386)             Te3(byte(t3, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 387)             rk[0];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 388)         s1 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 389)             Te0(byte(t1, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 390)             Te1(byte(t2, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 391)             Te2(byte(t3, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 392)             Te3(byte(t0, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 393)             rk[1];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 394)         s2 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 395)             Te0(byte(t2, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 396)             Te1(byte(t3, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 397)             Te2(byte(t0, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 398)             Te3(byte(t1, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 399)             rk[2];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 400)         s3 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 401)             Te0(byte(t3, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 402)             Te1(byte(t0, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 403)             Te2(byte(t1, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 404)             Te3(byte(t2, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 405)             rk[3];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 406)     }
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 407) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 408) #endif
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 409) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 410)     /*
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 411)      * apply last round and
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 412)      * map cipher state to byte array block:
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 413)      */
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 414)     s0 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 415)         (Te4_3[byte(t0, 3)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 416)         (Te4_2[byte(t1, 2)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 417)         (Te4_1[byte(t2, 1)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 418)         (Te4_0[byte(t3, 0)]) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 419)         rk[0];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 420)     STORE32H(s0, ct);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 421)     s1 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 422)         (Te4_3[byte(t1, 3)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 423)         (Te4_2[byte(t2, 2)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 424)         (Te4_1[byte(t3, 1)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 425)         (Te4_0[byte(t0, 0)]) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 426)         rk[1];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 427)     STORE32H(s1, ct+4);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 428)     s2 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 429)         (Te4_3[byte(t2, 3)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 430)         (Te4_2[byte(t3, 2)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 431)         (Te4_1[byte(t0, 1)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 432)         (Te4_0[byte(t1, 0)]) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 433)         rk[2];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 434)     STORE32H(s2, ct+8);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 435)     s3 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 436)         (Te4_3[byte(t3, 3)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 437)         (Te4_2[byte(t0, 2)]) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 438)         (Te4_1[byte(t1, 1)]) ^
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 439)         (Te4_0[byte(t2, 0)]) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 440)         rk[3];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 441)     STORE32H(s3, ct+12);
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 442) 
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 443)     return CRYPT_OK;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 444) }
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 445) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 446) #ifdef LTC_CLEAN_STACK
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 447) int ECB_ENC(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 448) {
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 449)    int err = _rijndael_ecb_encrypt(pt, ct, skey);
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 450)    burn_stack(sizeof(unsigned long)*8 + sizeof(unsigned long*) + sizeof(int)*2);
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 451)    return err;
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 452) }
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 453) #endif
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 454) 
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 455) #ifndef ENCRYPT_ONLY
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 456) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 457) /**
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 458)   Decrypts a block of text with AES
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 459)   @param ct The input ciphertext (16 bytes)
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 460)   @param pt The output plaintext (16 bytes)
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 461)   @param skey The key as scheduled
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 462)   @return CRYPT_OK if successful
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 463) */
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 464) #ifdef LTC_CLEAN_STACK
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 465) static int _rijndael_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 466) #else
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 467) int ECB_DEC(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 468) #endif
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 469) {
bd479d2b aes.c                 (Tom St Denis    2003-07-11 02:09:41 +0000 470)     ulong32 s0, s1, s2, s3, t0, t1, t2, t3, *rk;
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 471)     int Nr, r;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 472) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 473)     LTC_ARGCHK(pt != NULL);
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 474)     LTC_ARGCHK(ct != NULL);
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 475)     LTC_ARGCHK(skey != NULL);
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 476) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 477)     Nr = skey->rijndael.Nr;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 478)     rk = skey->rijndael.dK;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 479) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 480)     /*
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 481)      * map byte array block to cipher state
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 482)      * and add initial round key:
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 483)      */
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 484)     LOAD32H(s0, ct      ); s0 ^= rk[0];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 485)     LOAD32H(s1, ct  +  4); s1 ^= rk[1];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 486)     LOAD32H(s2, ct  +  8); s2 ^= rk[2];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 487)     LOAD32H(s3, ct  + 12); s3 ^= rk[3];
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 488) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 489) #ifdef LTC_SMALL_CODE
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 490)     for (r = 0; ; r++) {
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 491)         rk += 4;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 492)         t0 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 493)             Td0(byte(s0, 3)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 494)             Td1(byte(s3, 2)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 495)             Td2(byte(s2, 1)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 496)             Td3(byte(s1, 0)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 497)             rk[0];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 498)         t1 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 499)             Td0(byte(s1, 3)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 500)             Td1(byte(s0, 2)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 501)             Td2(byte(s3, 1)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 502)             Td3(byte(s2, 0)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 503)             rk[1];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 504)         t2 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 505)             Td0(byte(s2, 3)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 506)             Td1(byte(s1, 2)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 507)             Td2(byte(s0, 1)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 508)             Td3(byte(s3, 0)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 509)             rk[2];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 510)         t3 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 511)             Td0(byte(s3, 3)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 512)             Td1(byte(s2, 2)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 513)             Td2(byte(s1, 1)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 514)             Td3(byte(s0, 0)) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 515)             rk[3];
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 516)         if (r == Nr-2) {
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 517)            break;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 518)         }
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 519)         s0 = t0; s1 = t1; s2 = t2; s3 = t3;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 520)     }
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 521)     rk += 4;
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 522) 
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 523) #else
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 524) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 525)     /*
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 526)      * Nr - 1 full rounds:
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 527)      */
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 528)     r = Nr >> 1;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 529)     for (;;) {
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 530) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 531)         t0 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 532)             Td0(byte(s0, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 533)             Td1(byte(s3, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 534)             Td2(byte(s2, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 535)             Td3(byte(s1, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 536)             rk[4];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 537)         t1 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 538)             Td0(byte(s1, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 539)             Td1(byte(s0, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 540)             Td2(byte(s3, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 541)             Td3(byte(s2, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 542)             rk[5];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 543)         t2 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 544)             Td0(byte(s2, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 545)             Td1(byte(s1, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 546)             Td2(byte(s0, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 547)             Td3(byte(s3, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 548)             rk[6];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 549)         t3 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 550)             Td0(byte(s3, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 551)             Td1(byte(s2, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 552)             Td2(byte(s1, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 553)             Td3(byte(s0, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 554)             rk[7];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 555) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 556)         rk += 8;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 557)         if (--r == 0) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 558)             break;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 559)         }
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 560) 
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 561) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 562)         s0 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 563)             Td0(byte(t0, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 564)             Td1(byte(t3, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 565)             Td2(byte(t2, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 566)             Td3(byte(t1, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 567)             rk[0];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 568)         s1 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 569)             Td0(byte(t1, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 570)             Td1(byte(t0, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 571)             Td2(byte(t3, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 572)             Td3(byte(t2, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 573)             rk[1];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 574)         s2 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 575)             Td0(byte(t2, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 576)             Td1(byte(t1, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 577)             Td2(byte(t0, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 578)             Td3(byte(t3, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 579)             rk[2];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 580)         s3 =
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 581)             Td0(byte(t3, 3)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 582)             Td1(byte(t2, 2)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 583)             Td2(byte(t1, 1)) ^
40c5578a aes.c                 (Tom St Denis    2004-05-12 20:42:16 +0000 584)             Td3(byte(t0, 0)) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 585)             rk[3];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 586)     }
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 587) #endif
e309942b aes.c                 (Tom St Denis    2003-06-19 15:23:20 +0000 588) 
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 589)     /*
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 590)      * apply last round and
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 591)      * map cipher state to byte array block:
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 592)      */
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 593)     s0 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 594)         (Td4[byte(t0, 3)] & 0xff000000) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 595)         (Td4[byte(t3, 2)] & 0x00ff0000) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 596)         (Td4[byte(t2, 1)] & 0x0000ff00) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 597)         (Td4[byte(t1, 0)] & 0x000000ff) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 598)         rk[0];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 599)     STORE32H(s0, pt);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 600)     s1 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 601)         (Td4[byte(t1, 3)] & 0xff000000) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 602)         (Td4[byte(t0, 2)] & 0x00ff0000) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 603)         (Td4[byte(t3, 1)] & 0x0000ff00) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 604)         (Td4[byte(t2, 0)] & 0x000000ff) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 605)         rk[1];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 606)     STORE32H(s1, pt+4);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 607)     s2 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 608)         (Td4[byte(t2, 3)] & 0xff000000) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 609)         (Td4[byte(t1, 2)] & 0x00ff0000) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 610)         (Td4[byte(t0, 1)] & 0x0000ff00) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 611)         (Td4[byte(t3, 0)] & 0x000000ff) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 612)         rk[2];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 613)     STORE32H(s2, pt+8);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 614)     s3 =
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 615)         (Td4[byte(t3, 3)] & 0xff000000) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 616)         (Td4[byte(t2, 2)] & 0x00ff0000) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 617)         (Td4[byte(t1, 1)] & 0x0000ff00) ^
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 618)         (Td4[byte(t0, 0)] & 0x000000ff) ^
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 619)         rk[3];
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 620)     STORE32H(s3, pt+12);
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 621) 
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 622)     return CRYPT_OK;
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 623) }
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 624) 
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 625) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 626) #ifdef LTC_CLEAN_STACK
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 627) int ECB_DEC(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 628) {
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 629)    int err = _rijndael_ecb_decrypt(ct, pt, skey);
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 630)    burn_stack(sizeof(unsigned long)*8 + sizeof(unsigned long*) + sizeof(int)*2);
4a1a5796 src/ciphers/aes/aes.c (Tom St Denis    2005-11-18 05:15:37 +0000 631)    return err;
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 632) }
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 633) #endif
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 634) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 635) /**
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 636)   Performs a self-test of the AES block cipher
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 637)   @return CRYPT_OK if functional, CRYPT_NOP if self-test has been disabled
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 638) */
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 639) int ECB_TEST(void)
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 640) {
d6071c62 aes.c                 (Tom St Denis    2003-06-01 18:55:11 +0000 641)  #ifndef LTC_TEST
d6071c62 aes.c                 (Tom St Denis    2003-06-01 18:55:11 +0000 642)     return CRYPT_NOP;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 643)  #else
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 644)  int err;
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 645)  static const struct {
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 646)      int keylen;
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 647)      unsigned char key[32], pt[16], ct[16];
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 648)  } tests[] = {
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 649)     { 16,
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 650)       { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 651)         0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f },
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 652)       { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 653)         0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff },
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 654)       { 0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 655)         0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a }
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 656)     }, {
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 657)       24,
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 658)       { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 659)         0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 660)         0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17 },
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 661)       { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 662)         0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff },
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 663)       { 0xdd, 0xa9, 0x7c, 0xa4, 0x86, 0x4c, 0xdf, 0xe0,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 664)         0x6e, 0xaf, 0x70, 0xa0, 0xec, 0x0d, 0x71, 0x91 }
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 665)     }, {
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 666)       32,
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 667)       { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 668)         0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 669)         0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 670)         0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f },
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 671)       { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 672)         0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff },
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 673)       { 0x8e, 0xa2, 0xb7, 0xca, 0x51, 0x67, 0x45, 0xbf,
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 674)         0xea, 0xfc, 0x49, 0x90, 0x4b, 0x49, 0x60, 0x89 }
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 675)     }
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 676)  };
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 677) 
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 678)  symmetric_key key;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 679)  unsigned char tmp[2][16];
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 680)  int i, y;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 681) 
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 682)  for (i = 0; i < (int)(sizeof(tests)/sizeof(tests[0])); i++) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 683)     zeromem(&key, sizeof(key));
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 684)     if ((err = rijndael_setup(tests[i].key, tests[i].keylen, 0, &key)) != CRYPT_OK) {
f9afcba6 aes.c                 (Tom St Denis    2003-06-15 22:37:45 +0000 685)        return err;
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 686)     }
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 687) 
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 688)     rijndael_ecb_encrypt(tests[i].pt, tmp[0], &key);
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 689)     rijndael_ecb_decrypt(tmp[0], tmp[1], &key);
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 690)     if (XMEMCMP(tmp[0], tests[i].ct, 16) || XMEMCMP(tmp[1], tests[i].pt, 16)) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 691) #if 0
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 692)        printf("\n\nTest %d failed\n", i);
2de2976d src/ciphers/aes/aes.c (Tom St Denis    2006-11-17 14:21:24 +0000 693)        if (XMEMCMP(tmp[0], tests[i].ct, 16)) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 694)           printf("CT: ");
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 695)           for (i = 0; i < 16; i++) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 696)              printf("%02x ", tmp[0][i]);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 697)           }
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 698)           printf("\n");
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 699)        } else {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 700)           printf("PT: ");
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 701)           for (i = 0; i < 16; i++) {
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 702)              printf("%02x ", tmp[1][i]);
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 703)           }
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 704)           printf("\n");
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 705)        }
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 706) #endif
f5331baa aes.c                 (Tom St Denis    2003-06-11 21:10:22 +0000 707)         return CRYPT_FAIL_TESTVECTOR;
a14a7371 aes.c                 (Tom St Denis    2003-03-03 01:00:16 +0000 708)     }
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 709) 
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 710)       /* now see if we can encrypt all zero bytes 1000 times, decrypt and come back where we started */
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 711)       for (y = 0; y < 16; y++) tmp[0][y] = 0;
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 712)       for (y = 0; y < 1000; y++) rijndael_ecb_encrypt(tmp[0], tmp[0], &key);
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 713)       for (y = 0; y < 1000; y++) rijndael_ecb_decrypt(tmp[0], tmp[0], &key);
033cec5f aes.c                 (Tom St Denis    2003-12-24 18:59:57 +0000 714)       for (y = 0; y < 16; y++) if (tmp[0][y] != 0) return CRYPT_FAIL_TESTVECTOR;
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 715)  }
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 716)  return CRYPT_OK;
d6071c62 aes.c                 (Tom St Denis    2003-06-01 18:55:11 +0000 717)  #endif
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 718) }
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 719) 
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 720) #endif /* ENCRYPT_ONLY */
3fe312cc aes.c                 (Tom St Denis    2004-05-31 02:36:47 +0000 721) 
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000 722) 
8e7777b5 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-01-03 15:16:59 +0100 723) /** Terminate the context
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000 724)    @param skey    The scheduled key
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000 725) */
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000 726) void ECB_DONE(symmetric_key *skey)
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000 727) {
473b0319 src/ciphers/aes/aes.c (Steffen Jaeckel 2014-08-24 18:24:15 +0200 728)   LTC_UNUSED_PARAM(skey);
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000 729) }
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000 730) 
6ac99524 src/ciphers/aes/aes.c (Tom St Denis    2005-04-17 11:37:13 +0000 731) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 732) /**
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 733)   Gets suitable key size
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 734)   @param keysize [in/out] The length of the recommended key (in bytes).  This function will store the suitable size back in this variable.
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 735)   @return CRYPT_OK if the input key size is acceptable.
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 736) */
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 737) int ECB_KS(int *keysize)
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 738) {
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 739)    LTC_ARGCHK(keysize != NULL);
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 740) 
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 741)    if (*keysize < 16)
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 742)       return CRYPT_INVALID_KEYSIZE;
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 743)    if (*keysize < 24) {
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 744)       *keysize = 16;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 745)       return CRYPT_OK;
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 746)    } else if (*keysize < 32) {
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 747)       *keysize = 24;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 748)       return CRYPT_OK;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 749)    } else {
bfc2f5b0 src/ciphers/aes/aes.c (Tom St Denis    2004-12-30 23:55:53 +0000 750)       *keysize = 32;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 751)       return CRYPT_OK;
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 752)    }
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 753) }
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 754) 
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 755) #endif
^a6a5fc6 aes.c                 (Tom St Denis    2003-03-03 00:59:24 +0000 756) 
3964a652 src/ciphers/aes/aes.c (Tom St Denis    2005-06-09 00:08:13 +0000 757) 
3964a652 src/ciphers/aes/aes.c (Tom St Denis    2005-06-09 00:08:13 +0000 758) /* $Source$ */
3964a652 src/ciphers/aes/aes.c (Tom St Denis    2005-06-09 00:08:13 +0000 759) /* $Revision$ */
3964a652 src/ciphers/aes/aes.c (Tom St Denis    2005-06-09 00:08:13 +0000 760) /* $Date$ */
