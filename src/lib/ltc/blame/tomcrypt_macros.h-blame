bd479d2b mycrypt_macros.h              (Tom St Denis       2003-07-11 02:09:41 +0000   1) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000   2) /* ---- HELPER MACROS ---- */
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000   3) #ifdef ENDIAN_NEUTRAL
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000   4) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000   5) #define STORE32L(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200   6)   do { (y)[3] = (unsigned char)(((x)>>24)&255); (y)[2] = (unsigned char)(((x)>>16)&255);   \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200   7)        (y)[1] = (unsigned char)(((x)>>8)&255); (y)[0] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000   8) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000   9) #define LOAD32L(x, y)                            \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  10)   do { x = ((ulong32)((y)[3] & 255)<<24) | \
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200  11)            ((ulong32)((y)[2] & 255)<<16) | \
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200  12)            ((ulong32)((y)[1] & 255)<<8)  | \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  13)            ((ulong32)((y)[0] & 255)); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  14) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  15) #define STORE64L(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  16)   do { (y)[7] = (unsigned char)(((x)>>56)&255); (y)[6] = (unsigned char)(((x)>>48)&255);   \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  17)        (y)[5] = (unsigned char)(((x)>>40)&255); (y)[4] = (unsigned char)(((x)>>32)&255);   \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  18)        (y)[3] = (unsigned char)(((x)>>24)&255); (y)[2] = (unsigned char)(((x)>>16)&255);   \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  19)        (y)[1] = (unsigned char)(((x)>>8)&255); (y)[0] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  20) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  21) #define LOAD64L(x, y)                                                       \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  22)   do { x = (((ulong64)((y)[7] & 255))<<56)|(((ulong64)((y)[6] & 255))<<48)| \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  23)            (((ulong64)((y)[5] & 255))<<40)|(((ulong64)((y)[4] & 255))<<32)| \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  24)            (((ulong64)((y)[3] & 255))<<24)|(((ulong64)((y)[2] & 255))<<16)| \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  25)            (((ulong64)((y)[1] & 255))<<8)|(((ulong64)((y)[0] & 255))); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  26) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  27) #define STORE32H(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  28)   do { (y)[0] = (unsigned char)(((x)>>24)&255); (y)[1] = (unsigned char)(((x)>>16)&255);   \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  29)        (y)[2] = (unsigned char)(((x)>>8)&255); (y)[3] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  30) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  31) #define LOAD32H(x, y)                            \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  32)   do { x = ((ulong32)((y)[0] & 255)<<24) | \
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200  33)            ((ulong32)((y)[1] & 255)<<16) | \
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200  34)            ((ulong32)((y)[2] & 255)<<8)  | \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  35)            ((ulong32)((y)[3] & 255)); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  36) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  37) #define STORE64H(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  38) do { (y)[0] = (unsigned char)(((x)>>56)&255); (y)[1] = (unsigned char)(((x)>>48)&255);     \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  39)      (y)[2] = (unsigned char)(((x)>>40)&255); (y)[3] = (unsigned char)(((x)>>32)&255);     \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  40)      (y)[4] = (unsigned char)(((x)>>24)&255); (y)[5] = (unsigned char)(((x)>>16)&255);     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  41)      (y)[6] = (unsigned char)(((x)>>8)&255); (y)[7] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  42) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  43) #define LOAD64H(x, y)                                                      \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  44) do { x = (((ulong64)((y)[0] & 255))<<56)|(((ulong64)((y)[1] & 255))<<48) | \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  45)          (((ulong64)((y)[2] & 255))<<40)|(((ulong64)((y)[3] & 255))<<32) | \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  46)          (((ulong64)((y)[4] & 255))<<24)|(((ulong64)((y)[5] & 255))<<16) | \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  47)          (((ulong64)((y)[6] & 255))<<8)|(((ulong64)((y)[7] & 255))); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  48) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  49) #endif /* ENDIAN_NEUTRAL */
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  50) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  51) #ifdef ENDIAN_LITTLE
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  52) 
382c9d4d src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-26 00:39:19 -0700  53) #ifdef LTC_HAVE_BSWAP_BUILTIN
382c9d4d src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-26 00:39:19 -0700  54) 
382c9d4d src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-26 00:39:19 -0700  55) #define STORE32H(x, y)                          \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  56) do { ulong32 __t = __builtin_bswap32 ((x));     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  57)       XMEMCPY ((y), &__t, 4); } while(0)
382c9d4d src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-26 00:39:19 -0700  58) 
382c9d4d src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-26 00:39:19 -0700  59) #define LOAD32H(x, y)                           \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  60) do { XMEMCPY (&(x), (y), 4);                    \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  61)       (x) = __builtin_bswap32 ((x)); } while(0)
382c9d4d src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-26 00:39:19 -0700  62) 
382c9d4d src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-26 00:39:19 -0700  63) #elif !defined(LTC_NO_BSWAP) && (defined(INTEL_CC) || (defined(__GNUC__) && (defined(__DJGPP__) || defined(__CYGWIN__) || defined(__MINGW32__) || defined(__i386__) || defined(__x86_64__))))
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  64) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  65) #define STORE32H(x, y)           \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  66) asm __volatile__ (               \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  67)    "bswapl %0     \n\t"          \
e24b01d3 src/headers/tomcrypt_macros.h (Tom St Denis       2006-12-16 18:10:04 +0000  68)    "movl   %0,(%1)\n\t"          \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  69)    "bswapl %0     \n\t"          \
e24b01d3 src/headers/tomcrypt_macros.h (Tom St Denis       2006-12-16 18:10:04 +0000  70)       ::"r"(x), "r"(y));
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  71) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  72) #define LOAD32H(x, y)          \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  73) asm __volatile__ (             \
2de2976d src/headers/tomcrypt_macros.h (Tom St Denis       2006-11-17 14:21:24 +0000  74)    "movl (%1),%0\n\t"          \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  75)    "bswapl %0\n\t"             \
2de2976d src/headers/tomcrypt_macros.h (Tom St Denis       2006-11-17 14:21:24 +0000  76)    :"=r"(x): "r"(y));
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  77) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  78) #else
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  79) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  80) #define STORE32H(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  81)   do { (y)[0] = (unsigned char)(((x)>>24)&255); (y)[1] = (unsigned char)(((x)>>16)&255);   \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  82)        (y)[2] = (unsigned char)(((x)>>8)&255); (y)[3] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  83) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  84) #define LOAD32H(x, y)                            \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  85)   do { x = ((ulong32)((y)[0] & 255)<<24) | \
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200  86)            ((ulong32)((y)[1] & 255)<<16) | \
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200  87)            ((ulong32)((y)[2] & 255)<<8)  | \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  88)            ((ulong32)((y)[3] & 255)); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000  89) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  90) #endif
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000  91) 
382c9d4d src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-26 00:39:19 -0700  92) #ifdef LTC_HAVE_BSWAP_BUILTIN
ad566e1b src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-25 20:18:26 -0700  93) 
ad566e1b src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-25 20:18:26 -0700  94) #define STORE64H(x, y)                          \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  95) do { ulong64 __t = __builtin_bswap64 ((x));     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  96)       XMEMCPY ((y), &__t, 8); } while(0)
ad566e1b src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-25 20:18:26 -0700  97) 
ad566e1b src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-25 20:18:26 -0700  98) #define LOAD64H(x, y)                           \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200  99) do { XMEMCPY (&(x), (y), 8);                    \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 100)       (x) = __builtin_bswap64 ((x)); } while(0)
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 101) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 102) /* x86_64 processor */
ad566e1b src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-25 20:18:26 -0700 103) #elif !defined(LTC_NO_BSWAP) && (defined(__GNUC__) && defined(__x86_64__))
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 104) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 105) #define STORE64H(x, y)           \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 106) asm __volatile__ (               \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 107)    "bswapq %0     \n\t"          \
e24b01d3 src/headers/tomcrypt_macros.h (Tom St Denis       2006-12-16 18:10:04 +0000 108)    "movq   %0,(%1)\n\t"          \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 109)    "bswapq %0     \n\t"          \
cefff855 src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-25 17:11:25 -0700 110)    ::"r"(x), "r"(y): "memory");
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 111) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 112) #define LOAD64H(x, y)          \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 113) asm __volatile__ (             \
2de2976d src/headers/tomcrypt_macros.h (Tom St Denis       2006-11-17 14:21:24 +0000 114)    "movq (%1),%0\n\t"          \
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 115)    "bswapq %0\n\t"             \
cefff855 src/headers/tomcrypt_macros.h (Patrick Pelletier  2011-09-25 17:11:25 -0700 116)    :"=r"(x): "r"(y): "memory");
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 117) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 118) #else
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 119) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 120) #define STORE64H(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 121) do { (y)[0] = (unsigned char)(((x)>>56)&255); (y)[1] = (unsigned char)(((x)>>48)&255);     \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 122)      (y)[2] = (unsigned char)(((x)>>40)&255); (y)[3] = (unsigned char)(((x)>>32)&255);     \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 123)      (y)[4] = (unsigned char)(((x)>>24)&255); (y)[5] = (unsigned char)(((x)>>16)&255);     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 124)      (y)[6] = (unsigned char)(((x)>>8)&255); (y)[7] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 125) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 126) #define LOAD64H(x, y)                                                      \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 127) do { x = (((ulong64)((y)[0] & 255))<<56)|(((ulong64)((y)[1] & 255))<<48) | \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 128)          (((ulong64)((y)[2] & 255))<<40)|(((ulong64)((y)[3] & 255))<<32) | \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 129)          (((ulong64)((y)[4] & 255))<<24)|(((ulong64)((y)[5] & 255))<<16) | \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 130)          (((ulong64)((y)[6] & 255))<<8)|(((ulong64)((y)[7] & 255))); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 131) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 132) #endif
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 133) 
bfcf1eb2 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2012-07-26 14:43:15 +0200 134) #ifdef ENDIAN_32BITWORD
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 135) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 136) #define STORE32L(x, y)        \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 137)   do { ulong32  __t = (x); XMEMCPY(y, &__t, 4); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 138) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 139) #define LOAD32L(x, y)         \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 140)   do { XMEMCPY(&(x), y, 4); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 141) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 142) #define STORE64L(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 143)   do { (y)[7] = (unsigned char)(((x)>>56)&255); (y)[6] = (unsigned char)(((x)>>48)&255);   \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 144)        (y)[5] = (unsigned char)(((x)>>40)&255); (y)[4] = (unsigned char)(((x)>>32)&255);   \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 145)        (y)[3] = (unsigned char)(((x)>>24)&255); (y)[2] = (unsigned char)(((x)>>16)&255);   \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 146)        (y)[1] = (unsigned char)(((x)>>8)&255); (y)[0] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 147) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 148) #define LOAD64L(x, y)                                                       \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 149)   do { x = (((ulong64)((y)[7] & 255))<<56)|(((ulong64)((y)[6] & 255))<<48)| \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 150)            (((ulong64)((y)[5] & 255))<<40)|(((ulong64)((y)[4] & 255))<<32)| \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 151)            (((ulong64)((y)[3] & 255))<<24)|(((ulong64)((y)[2] & 255))<<16)| \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 152)            (((ulong64)((y)[1] & 255))<<8)|(((ulong64)((y)[0] & 255))); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 153) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 154) #else /* 64-bit words then  */
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 155) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 156) #define STORE32L(x, y)        \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 157)   do { ulong32 __t = (x); XMEMCPY(y, &__t, 4); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 158) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 159) #define LOAD32L(x, y)         \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 160)   do { XMEMCPY(&(x), y, 4); x &= 0xFFFFFFFF; } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 161) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 162) #define STORE64L(x, y)        \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 163)   do { ulong64 __t = (x); XMEMCPY(y, &__t, 8); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 164) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 165) #define LOAD64L(x, y)         \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 166)   do { XMEMCPY(&(x), y, 8); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 167) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 168) #endif /* ENDIAN_64BITWORD */
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 169) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 170) #endif /* ENDIAN_LITTLE */
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 171) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 172) #ifdef ENDIAN_BIG
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 173) #define STORE32L(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 174)   do { (y)[3] = (unsigned char)(((x)>>24)&255); (y)[2] = (unsigned char)(((x)>>16)&255);   \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 175)        (y)[1] = (unsigned char)(((x)>>8)&255); (y)[0] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 176) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 177) #define LOAD32L(x, y)                            \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 178)   do { x = ((ulong32)((y)[3] & 255)<<24) | \
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 179)            ((ulong32)((y)[2] & 255)<<16) | \
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 180)            ((ulong32)((y)[1] & 255)<<8)  | \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 181)            ((ulong32)((y)[0] & 255)); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 182) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 183) #define STORE64L(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 184) do { (y)[7] = (unsigned char)(((x)>>56)&255); (y)[6] = (unsigned char)(((x)>>48)&255);     \
e9c1c530 mycrypt_macros.h              (Tom St Denis       2004-06-23 19:55:24 +0000 185)      (y)[5] = (unsigned char)(((x)>>40)&255); (y)[4] = (unsigned char)(((x)>>32)&255);     \
e9c1c530 mycrypt_macros.h              (Tom St Denis       2004-06-23 19:55:24 +0000 186)      (y)[3] = (unsigned char)(((x)>>24)&255); (y)[2] = (unsigned char)(((x)>>16)&255);     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 187)      (y)[1] = (unsigned char)(((x)>>8)&255); (y)[0] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 188) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 189) #define LOAD64L(x, y)                                                      \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 190) do { x = (((ulong64)((y)[7] & 255))<<56)|(((ulong64)((y)[6] & 255))<<48) | \
e9c1c530 mycrypt_macros.h              (Tom St Denis       2004-06-23 19:55:24 +0000 191)          (((ulong64)((y)[5] & 255))<<40)|(((ulong64)((y)[4] & 255))<<32) | \
e9c1c530 mycrypt_macros.h              (Tom St Denis       2004-06-23 19:55:24 +0000 192)          (((ulong64)((y)[3] & 255))<<24)|(((ulong64)((y)[2] & 255))<<16) | \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 193)          (((ulong64)((y)[1] & 255))<<8)|(((ulong64)((y)[0] & 255))); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 194) 
bfcf1eb2 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2012-07-26 14:43:15 +0200 195) #ifdef ENDIAN_32BITWORD
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 196) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 197) #define STORE32H(x, y)        \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 198)   do { ulong32 __t = (x); XMEMCPY(y, &__t, 4); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 199) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 200) #define LOAD32H(x, y)         \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 201)   do { XMEMCPY(&(x), y, 4); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 202) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 203) #define STORE64H(x, y)                                                                     \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 204)   do { (y)[0] = (unsigned char)(((x)>>56)&255); (y)[1] = (unsigned char)(((x)>>48)&255);   \
e9c1c530 mycrypt_macros.h              (Tom St Denis       2004-06-23 19:55:24 +0000 205)        (y)[2] = (unsigned char)(((x)>>40)&255); (y)[3] = (unsigned char)(((x)>>32)&255);   \
e9c1c530 mycrypt_macros.h              (Tom St Denis       2004-06-23 19:55:24 +0000 206)        (y)[4] = (unsigned char)(((x)>>24)&255); (y)[5] = (unsigned char)(((x)>>16)&255);   \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 207)        (y)[6] = (unsigned char)(((x)>>8)&255);  (y)[7] = (unsigned char)((x)&255); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 208) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 209) #define LOAD64H(x, y)                                                       \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 210)   do { x = (((ulong64)((y)[0] & 255))<<56)|(((ulong64)((y)[1] & 255))<<48)| \
e9c1c530 mycrypt_macros.h              (Tom St Denis       2004-06-23 19:55:24 +0000 211)            (((ulong64)((y)[2] & 255))<<40)|(((ulong64)((y)[3] & 255))<<32)| \
e9c1c530 mycrypt_macros.h              (Tom St Denis       2004-06-23 19:55:24 +0000 212)            (((ulong64)((y)[4] & 255))<<24)|(((ulong64)((y)[5] & 255))<<16)| \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 213)            (((ulong64)((y)[6] & 255))<<8)| (((ulong64)((y)[7] & 255))); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 214) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 215) #else /* 64-bit words then  */
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 216) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 217) #define STORE32H(x, y)        \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 218)   do { ulong32 __t = (x); XMEMCPY(y, &__t, 4); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 219) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 220) #define LOAD32H(x, y)         \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 221)   do { XMEMCPY(&(x), y, 4); x &= 0xFFFFFFFF; } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 222) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 223) #define STORE64H(x, y)        \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 224)   do { ulong64 __t = (x); XMEMCPY(y, &__t, 8); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 225) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 226) #define LOAD64H(x, y)         \
ae5cc352 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-04 01:02:46 +0200 227)   do { XMEMCPY(&(x), y, 8); } while(0)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 228) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 229) #endif /* ENDIAN_64BITWORD */
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 230) #endif /* ENDIAN_BIG */
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 231) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 232) #define BSWAP(x)  ( ((x>>24)&0x000000FFUL) | ((x<<24)&0xFF000000UL)  | \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 233)                     ((x>>8)&0x0000FF00UL)  | ((x<<8)&0x00FF0000UL) )
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 234) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 235) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 236) /* 32-bit Rotates */
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 237) #if defined(_MSC_VER)
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 238) 
710106cd mycrypt_macros.h              (Tom St Denis       2003-07-16 17:43:06 +0000 239) /* instrinsic rotate */
710106cd mycrypt_macros.h              (Tom St Denis       2003-07-16 17:43:06 +0000 240) #include <stdlib.h>
710106cd mycrypt_macros.h              (Tom St Denis       2003-07-16 17:43:06 +0000 241) #pragma intrinsic(_lrotr,_lrotl)
710106cd mycrypt_macros.h              (Tom St Denis       2003-07-16 17:43:06 +0000 242) #define ROR(x,n) _lrotr(x,n)
710106cd mycrypt_macros.h              (Tom St Denis       2003-07-16 17:43:06 +0000 243) #define ROL(x,n) _lrotl(x,n)
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 244) #define RORc(x,n) _lrotr(x,n)
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 245) #define ROLc(x,n) _lrotl(x,n)
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 246) 
64d7ebe1 src/headers/tomcrypt_macros.h (Tom St Denis       2006-04-06 19:48:32 +0000 247) #elif !defined(__STRICT_ANSI__) && defined(__GNUC__) && (defined(__i386__) || defined(__x86_64__)) && !defined(INTEL_CC) && !defined(LTC_NO_ASM)
16100c38 mycrypt_macros.h              (Tom St Denis       2003-09-08 01:06:11 +0000 248) 
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 249) static inline ulong32 ROL(ulong32 word, int i)
16100c38 mycrypt_macros.h              (Tom St Denis       2003-09-08 01:06:11 +0000 250) {
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 251)    asm ("roll %%cl,%0"
1f8b8bda mycrypt_macros.h              (Tom St Denis       2004-02-20 20:03:32 +0000 252)       :"=r" (word)
1f8b8bda mycrypt_macros.h              (Tom St Denis       2004-02-20 20:03:32 +0000 253)       :"0" (word),"c" (i));
1f8b8bda mycrypt_macros.h              (Tom St Denis       2004-02-20 20:03:32 +0000 254)    return word;
16100c38 mycrypt_macros.h              (Tom St Denis       2003-09-08 01:06:11 +0000 255) }
16100c38 mycrypt_macros.h              (Tom St Denis       2003-09-08 01:06:11 +0000 256) 
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 257) static inline ulong32 ROR(ulong32 word, int i)
16100c38 mycrypt_macros.h              (Tom St Denis       2003-09-08 01:06:11 +0000 258) {
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 259)    asm ("rorl %%cl,%0"
1f8b8bda mycrypt_macros.h              (Tom St Denis       2004-02-20 20:03:32 +0000 260)       :"=r" (word)
1f8b8bda mycrypt_macros.h              (Tom St Denis       2004-02-20 20:03:32 +0000 261)       :"0" (word),"c" (i));
1f8b8bda mycrypt_macros.h              (Tom St Denis       2004-02-20 20:03:32 +0000 262)    return word;
16100c38 mycrypt_macros.h              (Tom St Denis       2003-09-08 01:06:11 +0000 263) }
16100c38 mycrypt_macros.h              (Tom St Denis       2003-09-08 01:06:11 +0000 264) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 265) #ifndef LTC_NO_ROLC
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 266) 
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 267) #define ROLc(word,i) ({ \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 268)    ulong32 __ROLc_tmp = word; \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 269)    __asm__ ("roll %2, %0" : \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 270)             "=r" (__ROLc_tmp) : \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 271)             "0" (__ROLc_tmp), \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 272)             "I" (i)); \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 273)             __ROLc_tmp; \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 274)    })
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 275) #define RORc(word,i) ({ \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 276)    ulong32 __RORc_tmp = word; \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 277)    __asm__ ("rorl %2, %0" : \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 278)             "=r" (__RORc_tmp) : \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 279)             "0" (__RORc_tmp), \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 280)             "I" (i)); \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 281)             __RORc_tmp; \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 282)    })
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 283) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 284) #else
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 285) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 286) #define ROLc ROL
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 287) #define RORc ROR
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 288) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 289) #endif
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 290) 
64d7ebe1 src/headers/tomcrypt_macros.h (Tom St Denis       2006-04-06 19:48:32 +0000 291) #elif !defined(__STRICT_ANSI__) && defined(LTC_PPC32)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 292) 
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 293) static inline ulong32 ROL(ulong32 word, int i)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 294) {
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 295)    asm ("rotlw %0,%0,%2"
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 296)       :"=r" (word)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 297)       :"0" (word),"r" (i));
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 298)    return word;
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 299) }
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 300) 
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 301) static inline ulong32 ROR(ulong32 word, int i)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 302) {
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 303)    asm ("rotlw %0,%0,%2"
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 304)       :"=r" (word)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 305)       :"0" (word),"r" (32-i));
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 306)    return word;
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 307) }
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 308) 
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 309) #ifndef LTC_NO_ROLC
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 310) 
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 311) static inline ulong32 ROLc(ulong32 word, const int i)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 312) {
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 313)    asm ("rotlwi %0,%0,%2"
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 314)       :"=r" (word)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 315)       :"0" (word),"I" (i));
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 316)    return word;
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 317) }
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 318) 
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 319) static inline ulong32 RORc(ulong32 word, const int i)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 320) {
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 321)    asm ("rotrwi %0,%0,%2"
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 322)       :"=r" (word)
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 323)       :"0" (word),"I" (i));
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 324)    return word;
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 325) }
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 326) 
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 327) #else
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 328) 
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 329) #define ROLc ROL
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 330) #define RORc ROR
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 331) 
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 332) #endif
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 333) 
4a1a5796 src/headers/tomcrypt_macros.h (Tom St Denis       2005-11-18 05:15:37 +0000 334) 
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 335) #else
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 336) 
710106cd mycrypt_macros.h              (Tom St Denis       2003-07-16 17:43:06 +0000 337) /* rotates the hard way */
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 338) #define ROL(x, y) ( (((ulong32)(x)<<(ulong32)((y)&31)) | (((ulong32)(x)&0xFFFFFFFFUL)>>(ulong32)(32-((y)&31)))) & 0xFFFFFFFFUL)
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 339) #define ROR(x, y) ( ((((ulong32)(x)&0xFFFFFFFFUL)>>(ulong32)((y)&31)) | ((ulong32)(x)<<(ulong32)(32-((y)&31)))) & 0xFFFFFFFFUL)
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 340) #define ROLc(x, y) ( (((ulong32)(x)<<(ulong32)((y)&31)) | (((ulong32)(x)&0xFFFFFFFFUL)>>(ulong32)(32-((y)&31)))) & 0xFFFFFFFFUL)
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 341) #define RORc(x, y) ( ((((ulong32)(x)&0xFFFFFFFFUL)>>(ulong32)((y)&31)) | ((ulong32)(x)<<(ulong32)(32-((y)&31)))) & 0xFFFFFFFFUL)
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 342) 
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 343) #endif
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 344) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 345) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 346) /* 64-bit Rotates */
8a2bd895 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2013-04-18 16:43:05 +0200 347) #if !defined(__STRICT_ANSI__) && defined(__GNUC__) && defined(__x86_64__) && !defined(_WIN64) && !defined(LTC_NO_ASM)
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 348) 
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 349) static inline ulong64 ROL64(ulong64 word, int i)
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 350) {
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 351)    asm("rolq %%cl,%0"
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 352)       :"=r" (word)
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 353)       :"0" (word),"c" (i));
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 354)    return word;
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 355) }
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 356) 
53f04b8e src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-04-03 15:06:56 +0200 357) static inline ulong64 ROR64(ulong64 word, int i)
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 358) {
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 359)    asm("rorq %%cl,%0"
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 360)       :"=r" (word)
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 361)       :"0" (word),"c" (i));
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 362)    return word;
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 363) }
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 364) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 365) #ifndef LTC_NO_ROLC
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 366) 
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 367) #define ROL64c(word,i) ({ \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 368)    ulong64 __ROL64c_tmp = word; \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 369)    __asm__ ("rolq %2, %0" : \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 370)             "=r" (__ROL64c_tmp) : \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 371)             "0" (__ROL64c_tmp), \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 372)             "J" (i)); \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 373)             __ROL64c_tmp; \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 374)    })
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 375) #define ROR64c(word,i) ({ \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 376)    ulong64 __ROR64c_tmp = word; \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 377)    __asm__ ("rorq %2, %0" : \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 378)             "=r" (__ROR64c_tmp) : \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 379)             "0" (__ROR64c_tmp), \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 380)             "J" (i)); \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 381)             __ROR64c_tmp; \
62878de0 src/headers/tomcrypt_macros.h (Saleem Abdulrasool 2015-01-04 22:53:08 -0800 382)    })
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 383) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 384) #else /* LTC_NO_ROLC */
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 385) 
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 386) #define ROL64c ROL64
6ac99524 src/headers/tomcrypt_macros.h (Tom St Denis       2005-04-17 11:37:13 +0000 387) #define ROR64c ROR64
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 388) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 389) #endif
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 390) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 391) #else /* Not x86_64  */
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 392) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 393) #define ROL64(x, y) \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 394)     ( (((x)<<((ulong64)(y)&63)) | \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 395)       (((x)&CONST64(0xFFFFFFFFFFFFFFFF))>>((ulong64)64-((y)&63)))) & CONST64(0xFFFFFFFFFFFFFFFF))
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 396) 
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 397) #define ROR64(x, y) \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 398)     ( ((((x)&CONST64(0xFFFFFFFFFFFFFFFF))>>((ulong64)(y)&CONST64(63))) | \
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 399)       ((x)<<((ulong64)(64-((y)&CONST64(63)))))) & CONST64(0xFFFFFFFFFFFFFFFF))
^a6a5fc6 mycrypt_macros.h              (Tom St Denis       2003-03-03 00:59:24 +0000 400) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 401) #define ROL64c(x, y) \
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 402)     ( (((x)<<((ulong64)(y)&63)) | \
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 403)       (((x)&CONST64(0xFFFFFFFFFFFFFFFF))>>((ulong64)64-((y)&63)))) & CONST64(0xFFFFFFFFFFFFFFFF))
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 404) 
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 405) #define ROR64c(x, y) \
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 406)     ( ((((x)&CONST64(0xFFFFFFFFFFFFFFFF))>>((ulong64)(y)&CONST64(63))) | \
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 407)       ((x)<<((ulong64)(64-((y)&CONST64(63)))))) & CONST64(0xFFFFFFFFFFFFFFFF))
bfc2f5b0 src/headers/tomcrypt_macros.h (Tom St Denis       2004-12-30 23:55:53 +0000 408) 
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 409) #endif
1c1822d5 mycrypt_macros.h              (Tom St Denis       2004-10-30 03:00:26 +0000 410) 
72412f6d src/headers/tomcrypt_macros.h (Tom St Denis       2005-08-01 16:36:47 +0000 411) #ifndef MAX
72412f6d src/headers/tomcrypt_macros.h (Tom St Denis       2005-08-01 16:36:47 +0000 412)    #define MAX(x, y) ( ((x)>(y))?(x):(y) )
72412f6d src/headers/tomcrypt_macros.h (Tom St Denis       2005-08-01 16:36:47 +0000 413) #endif
72412f6d src/headers/tomcrypt_macros.h (Tom St Denis       2005-08-01 16:36:47 +0000 414) 
72412f6d src/headers/tomcrypt_macros.h (Tom St Denis       2005-08-01 16:36:47 +0000 415) #ifndef MIN
72412f6d src/headers/tomcrypt_macros.h (Tom St Denis       2005-08-01 16:36:47 +0000 416)    #define MIN(x, y) ( ((x)<(y))?(x):(y) )
72412f6d src/headers/tomcrypt_macros.h (Tom St Denis       2005-08-01 16:36:47 +0000 417) #endif
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 418) 
473b0319 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-08-24 18:24:15 +0200 419) #ifndef LTC_UNUSED_PARAM
473b0319 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-08-24 18:24:15 +0200 420)    #define LTC_UNUSED_PARAM(x) (void)(x)
473b0319 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-08-24 18:24:15 +0200 421) #endif
473b0319 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2014-08-24 18:24:15 +0200 422) 
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 423) /* extract a byte portably */
710106cd mycrypt_macros.h              (Tom St Denis       2003-07-16 17:43:06 +0000 424) #ifdef _MSC_VER
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 425)    #define byte(x, n) ((unsigned char)((x) >> (8 * (n))))
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 426) #else
e309942b mycrypt_macros.h              (Tom St Denis       2003-06-19 15:23:20 +0000 427)    #define byte(x, n) (((x) >> (8 * (n))) & 255)
bfcf1eb2 src/headers/tomcrypt_macros.h (Steffen Jaeckel    2012-07-26 14:43:15 +0200 428) #endif
3964a652 src/headers/tomcrypt_macros.h (Tom St Denis       2005-06-09 00:08:13 +0000 429) 
3964a652 src/headers/tomcrypt_macros.h (Tom St Denis       2005-06-09 00:08:13 +0000 430) /* $Source$ */
3964a652 src/headers/tomcrypt_macros.h (Tom St Denis       2005-06-09 00:08:13 +0000 431) /* $Revision$ */
3964a652 src/headers/tomcrypt_macros.h (Tom St Denis       2005-06-09 00:08:13 +0000 432) /* $Date$ */
