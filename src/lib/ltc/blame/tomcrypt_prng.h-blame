bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000   1) /* ---- PRNG Stuff ---- */
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000   2) #ifdef LTC_YARROW
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000   3) struct yarrow_prng {
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000   4)     int                   cipher, hash;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000   5)     unsigned char         pool[MAXBLOCKSIZE];
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000   6)     symmetric_CTR         ctr;
4a1a5796 (Tom St Denis    2005-11-18 05:15:37 +0000   7)     LTC_MUTEX_TYPE(prng_lock)
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000   8) };
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000   9) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  10) 
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000  11) #ifdef LTC_RC4
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  12) struct rc4_prng {
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  13)     int x, y;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  14)     unsigned char buf[256];
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  15) };
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  16) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  17) 
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000  18) #ifdef LTC_FORTUNA
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  19) struct fortuna_prng {
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000  20)     hash_state pool[LTC_FORTUNA_POOLS];     /* the  pools */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  21) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  22)     symmetric_key skey;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  23) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  24)     unsigned char K[32],      /* the current key */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  25)                   IV[16];     /* IV for CTR mode */
bfcf1eb2 (Steffen Jaeckel 2012-07-26 14:43:15 +0200  26) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  27)     unsigned long pool_idx,   /* current pool we will add to */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  28)                   pool0_len,  /* length of 0'th pool */
bfcf1eb2 (Steffen Jaeckel 2012-07-26 14:43:15 +0200  29)                   wd;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  30) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  31)     ulong64       reset_cnt;  /* number of times we have reset */
4a1a5796 (Tom St Denis    2005-11-18 05:15:37 +0000  32)     LTC_MUTEX_TYPE(prng_lock)
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  33) };
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  34) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  35) 
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000  36) #ifdef LTC_SOBER128
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  37) struct sober128_prng {
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  38)     ulong32      R[17],          /* Working storage for the shift register */
bfcf1eb2 (Steffen Jaeckel 2012-07-26 14:43:15 +0200  39)                  initR[17],      /* saved register contents */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  40)                  konst,          /* key dependent constant */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  41)                  sbuf;           /* partial word encryption buffer */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  42) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  43)     int          nbuf,           /* number of part-word stream bits buffered */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  44)                  flag,           /* first add_entropy call or not? */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  45)                  set;            /* did we call add_entropy to set key? */
bfcf1eb2 (Steffen Jaeckel 2012-07-26 14:43:15 +0200  46) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  47) };
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  48) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  49) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  50) typedef union Prng_state {
2de2976d (Tom St Denis    2006-11-17 14:21:24 +0000  51)     char dummy[1];
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000  52) #ifdef LTC_YARROW
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  53)     struct yarrow_prng    yarrow;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  54) #endif
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000  55) #ifdef LTC_RC4
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  56)     struct rc4_prng       rc4;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  57) #endif
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000  58) #ifdef LTC_FORTUNA
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  59)     struct fortuna_prng   fortuna;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  60) #endif
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000  61) #ifdef LTC_SOBER128
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  62)     struct sober128_prng  sober128;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  63) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  64) } prng_state;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  65) 
72412f6d (Tom St Denis    2005-08-01 16:36:47 +0000  66) /** PRNG descriptor */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  67) extern struct ltc_prng_descriptor {
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  68)     /** Name of the PRNG */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  69)     char *name;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  70)     /** size in bytes of exported state */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  71)     int  export_size;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  72)     /** Start a PRNG state
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  73)         @param prng   [out] The state to initialize
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  74)         @return CRYPT_OK if successful
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  75)     */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  76)     int (*start)(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  77)     /** Add entropy to the PRNG
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  78)         @param in         The entropy
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  79)         @param inlen      Length of the entropy (octets)\
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  80)         @param prng       The PRNG state
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  81)         @return CRYPT_OK if successful
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  82)     */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  83)     int (*add_entropy)(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  84)     /** Ready a PRNG state to read from
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  85)         @param prng       The PRNG state to ready
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  86)         @return CRYPT_OK if successful
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  87)     */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  88)     int (*ready)(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  89)     /** Read from the PRNG
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  90)         @param out     [out] Where to store the data
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  91)         @param outlen  Length of data desired (octets)
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  92)         @param prng    The PRNG state to read from
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  93)         @return Number of octets read
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  94)     */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  95)     unsigned long (*read)(unsigned char *out, unsigned long outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  96)     /** Terminate a PRNG state
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  97)         @param prng   The PRNG state to terminate
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  98)         @return CRYPT_OK if successful
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000  99)     */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 100)     int (*done)(prng_state *prng);
bfcf1eb2 (Steffen Jaeckel 2012-07-26 14:43:15 +0200 101)     /** Export a PRNG state
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 102)         @param out     [out] The destination for the state
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 103)         @param outlen  [in/out] The max size and resulting size of the PRNG state
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 104)         @param prng    The PRNG to export
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 105)         @return CRYPT_OK if successful
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 106)     */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 107)     int (*pexport)(unsigned char *out, unsigned long *outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 108)     /** Import a PRNG state
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 109)         @param in      The data to import
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 110)         @param inlen   The length of the data to import (octets)
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 111)         @param prng    The PRNG to initialize/import
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 112)         @return CRYPT_OK if successful
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 113)     */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 114)     int (*pimport)(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 115)     /** Self-test the PRNG
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 116)         @return CRYPT_OK if successful, CRYPT_NOP if self-testing has been disabled
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 117)     */
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 118)     int (*test)(void);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 119) } prng_descriptor[];
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 120) 
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000 121) #ifdef LTC_YARROW
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 122) int yarrow_start(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 123) int yarrow_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 124) int yarrow_ready(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 125) unsigned long yarrow_read(unsigned char *out, unsigned long outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 126) int yarrow_done(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 127) int  yarrow_export(unsigned char *out, unsigned long *outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 128) int  yarrow_import(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 129) int  yarrow_test(void);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 130) extern const struct ltc_prng_descriptor yarrow_desc;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 131) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 132) 
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000 133) #ifdef LTC_FORTUNA
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 134) int fortuna_start(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 135) int fortuna_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 136) int fortuna_ready(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 137) unsigned long fortuna_read(unsigned char *out, unsigned long outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 138) int fortuna_done(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 139) int  fortuna_export(unsigned char *out, unsigned long *outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 140) int  fortuna_import(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 141) int  fortuna_test(void);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 142) extern const struct ltc_prng_descriptor fortuna_desc;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 143) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 144) 
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000 145) #ifdef LTC_RC4
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 146) int rc4_start(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 147) int rc4_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 148) int rc4_ready(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 149) unsigned long rc4_read(unsigned char *out, unsigned long outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 150) int  rc4_done(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 151) int  rc4_export(unsigned char *out, unsigned long *outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 152) int  rc4_import(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 153) int  rc4_test(void);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 154) extern const struct ltc_prng_descriptor rc4_desc;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 155) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 156) 
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000 157) #ifdef LTC_SPRNG
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 158) int sprng_start(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 159) int sprng_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 160) int sprng_ready(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 161) unsigned long sprng_read(unsigned char *out, unsigned long outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 162) int sprng_done(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 163) int  sprng_export(unsigned char *out, unsigned long *outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 164) int  sprng_import(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 165) int  sprng_test(void);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 166) extern const struct ltc_prng_descriptor sprng_desc;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 167) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 168) 
bbc52b9e (Tom St Denis    2007-07-20 17:48:02 +0000 169) #ifdef LTC_SOBER128
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 170) int sober128_start(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 171) int sober128_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 172) int sober128_ready(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 173) unsigned long sober128_read(unsigned char *out, unsigned long outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 174) int sober128_done(prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 175) int  sober128_export(unsigned char *out, unsigned long *outlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 176) int  sober128_import(const unsigned char *in, unsigned long inlen, prng_state *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 177) int  sober128_test(void);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 178) extern const struct ltc_prng_descriptor sober128_desc;
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 179) #endif
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 180) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 181) int find_prng(const char *name);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 182) int register_prng(const struct ltc_prng_descriptor *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 183) int unregister_prng(const struct ltc_prng_descriptor *prng);
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 184) int prng_is_valid(int idx);
72412f6d (Tom St Denis    2005-08-01 16:36:47 +0000 185) LTC_MUTEX_PROTO(ltc_prng_mutex)
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 186) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 187) /* Slow RNG you **might** be able to use to seed a PRNG with.  Be careful as this
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 188)  * might not work on all platforms as planned
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 189)  */
bfcf1eb2 (Steffen Jaeckel 2012-07-26 14:43:15 +0200 190) unsigned long rng_get_bytes(unsigned char *out,
bfcf1eb2 (Steffen Jaeckel 2012-07-26 14:43:15 +0200 191)                             unsigned long outlen,
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 192)                             void (*callback)(void));
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 193) 
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 194) int rng_make_prng(int bits, int wprng, prng_state *prng, void (*callback)(void));
bfc2f5b0 (Tom St Denis    2004-12-30 23:55:53 +0000 195) 
3964a652 (Tom St Denis    2005-06-09 00:08:13 +0000 196) 
3964a652 (Tom St Denis    2005-06-09 00:08:13 +0000 197) /* $Source$ */
3964a652 (Tom St Denis    2005-06-09 00:08:13 +0000 198) /* $Revision$ */
3964a652 (Tom St Denis    2005-06-09 00:08:13 +0000 199) /* $Date$ */
